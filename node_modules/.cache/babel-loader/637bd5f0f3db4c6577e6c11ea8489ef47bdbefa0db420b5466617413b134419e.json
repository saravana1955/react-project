{"ast":null,"code":"import jQuery from \"jquery\";\nexport function navigate(page) {\n  window.location.href = `${page}`;\n}\nconst closeUtilityComponent = () => {\n  jQuery($ => {\n    $.noConflict();\n    $(\".utility-component\").removeClass(\"add-utility-component-height\");\n  });\n};\nexport const getCurrentDate = () => {\n  let day, month, date, result, dateExtension;\n  const DATE = new Date();\n  date = DATE.getDate();\n  switch (DATE.getMonth()) {\n    case 0:\n      month = \"January\";\n      break;\n    case 1:\n      month = \"February\";\n      break;\n    case 2:\n      month = \"March\";\n      break;\n    case 3:\n      month = \"April\";\n      break;\n    case 4:\n      month = \"May\";\n      break;\n    case 5:\n      month = \"June\";\n      break;\n    case 6:\n      month = \"July\";\n      break;\n    case 7:\n      month = \"August\";\n      break;\n    case 8:\n      month = \"September\";\n      break;\n    case 9:\n      month = \"October\";\n      break;\n    case 10:\n      month = \"November\";\n      break;\n    case 11:\n      month = \"December\";\n      break;\n    default:\n      month = \"Undefined\";\n      break;\n  }\n  switch (DATE.getDay()) {\n    case 0:\n      day = \"Sunday\";\n      break;\n    case 1:\n      day = \"Monday\";\n      break;\n    case 2:\n      day = \"Tuesday\";\n      break;\n    case 3:\n      day = \"Wednesday\";\n      break;\n    case 4:\n      day = \"Thursday\";\n      break;\n    case 5:\n      day = \"Friday\";\n      break;\n    case 6:\n      day = \"Saturday\";\n      break;\n    default:\n      day = \"Undefined\";\n      break;\n  }\n\n  //date format check\n\n  let dateLength = date.toString().length;\n  if (dateLength == 1 && date == 1 || dateLength == 2 && date.toString().indexOf(\"1\") == 1) {\n    dateExtension = \"st\";\n  } else if (dateLength == 1 && date == 2 || dateLength == 2 && date.toString()[0] > 1 && date.toString().lastIndexOf(\"2\") == 1) {\n    dateExtension = \"nd\";\n  } else if (dateLength == 1 && date == 3 || dateLength == 2 && date.toString()[0] > 1 && date.toString().indexOf(\"3\") == 1) {\n    dateExtension = \"rd\";\n  } else {\n    dateExtension = \"th\";\n  }\n  result = `${day}, ${date}${dateExtension} of ${month}`;\n  return result;\n};\nexport const convertTo12Hour = time => {\n  var hours = parseInt(time.substr(0, 2));\n  var minutes = time.substr(3);\n  var ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  return hours + \" \" + ampm;\n};\nexport function getTimeFromDateString(datetime) {\n  // takes a format of YYYY/MM/DD HH:MM:SS and returns HH:MM:SS\n  let time = datetime.substr(11);\n  var hours = parseInt(time.substr(0, 2));\n  var formattedTime = hours + time.substr(2);\n  return formattedTime;\n}\nexport default navigate;","map":{"version":3,"names":["jQuery","navigate","page","window","location","href","closeUtilityComponent","$","noConflict","removeClass","getCurrentDate","day","month","date","result","dateExtension","DATE","Date","getDate","getMonth","getDay","dateLength","toString","length","indexOf","lastIndexOf","convertTo12Hour","time","hours","parseInt","substr","minutes","ampm","getTimeFromDateString","datetime","formattedTime"],"sources":["/Users/apple/Documents/ggg/react-project/src/inc/scripts/utilities.js"],"sourcesContent":["import jQuery from \"jquery\";\n\nexport function navigate(page) {\n\twindow.location.href = `${page}`;\n}\n\nconst closeUtilityComponent = () => {\n\tjQuery(($) => {\n\t\t$.noConflict();\n\n\t\t$(\".utility-component\").removeClass(\"add-utility-component-height\");\n\t});\n};\n\nexport const getCurrentDate = () => {\n\tlet day, month, date, result, dateExtension;\n\n\tconst DATE = new Date();\n\n\tdate = DATE.getDate();\n\n\tswitch (DATE.getMonth()) {\n\t\tcase 0:\n\t\t\tmonth = \"January\";\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tmonth = \"February\";\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tmonth = \"March\";\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tmonth = \"April\";\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tmonth = \"May\";\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tmonth = \"June\";\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tmonth = \"July\";\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tmonth = \"August\";\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\tmonth = \"September\";\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tmonth = \"October\";\n\t\t\tbreak;\n\t\tcase 10:\n\t\t\tmonth = \"November\";\n\t\t\tbreak;\n\t\tcase 11:\n\t\t\tmonth = \"December\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tmonth = \"Undefined\";\n\t\t\tbreak;\n\t}\n\n\tswitch (DATE.getDay()) {\n\t\tcase 0:\n\t\t\tday = \"Sunday\";\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tday = \"Monday\";\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tday = \"Tuesday\";\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tday = \"Wednesday\";\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tday = \"Thursday\";\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tday = \"Friday\";\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tday = \"Saturday\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tday = \"Undefined\";\n\t\t\tbreak;\n\t}\n\n\t//date format check\n\n\tlet dateLength = date.toString().length;\n\tif (\n\t\t(dateLength == 1 && date == 1) ||\n\t\t(dateLength == 2 && date.toString().indexOf(\"1\") == 1)\n\t) {\n\t\tdateExtension = \"st\";\n\t} else if (\n\t\t(dateLength == 1 && date == 2) ||\n\t\t(dateLength == 2 &&\n\t\t\tdate.toString()[0] > 1 &&\n\t\t\tdate.toString().lastIndexOf(\"2\") == 1)\n\t) {\n\t\tdateExtension = \"nd\";\n\t} else if (\n\t\t(dateLength == 1 && date == 3) ||\n\t\t(dateLength == 2 &&\n\t\t\tdate.toString()[0] > 1 &&\n\t\t\tdate.toString().indexOf(\"3\") == 1)\n\t) {\n\t\tdateExtension = \"rd\";\n\t} else {\n\t\tdateExtension = \"th\";\n\t}\n\n\tresult = `${day}, ${date}${dateExtension} of ${month}`;\n\treturn result;\n};\n\nexport const convertTo12Hour = (time) => {\n\tvar hours = parseInt(time.substr(0, 2));\n\tvar minutes = time.substr(3);\n\tvar ampm = hours >= 12 ? \"pm\" : \"am\";\n\thours = hours % 12;\n\thours = hours ? hours : 12; // the hour '0' should be '12'\n\treturn hours + \" \" + ampm;\n};\n\nexport function getTimeFromDateString(datetime) {\n\t// takes a format of YYYY/MM/DD HH:MM:SS and returns HH:MM:SS\n\tlet time = datetime.substr(11);\n\tvar hours = parseInt(time.substr(0, 2));\n\tvar formattedTime = hours + time.substr(2);\n\treturn formattedTime;\n}\nexport default navigate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}